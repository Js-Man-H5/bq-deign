{
    "resolvedId": "/Users/haixiaonan/Desktop/test/vue3/bq-design/node_modules/.vite/deps/chunk-LUJC7HAA.js",
    "transforms": [
        {
            "name": "vite:optimized-deps",
            "result": "// node_modules/.pnpm/resize-observer-polyfill@1.5.1/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\nvar MapShim = function() {\n  if (typeof Map !== \"undefined\") {\n    return Map;\n  }\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function(entry, index2) {\n      if (entry[0] === key) {\n        result = index2;\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  return (\n    /** @class */\n    function() {\n      function class_1() {\n        this.__entries__ = [];\n      }\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\n         * @returns {boolean}\n         */\n        get: function() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      class_1.prototype.get = function(key) {\n        var index2 = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index2];\n        return entry && entry[1];\n      };\n      class_1.prototype.set = function(key, value) {\n        var index2 = getIndex(this.__entries__, key);\n        if (~index2) {\n          this.__entries__[index2][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      class_1.prototype.delete = function(key) {\n        var entries = this.__entries__;\n        var index2 = getIndex(entries, key);\n        if (~index2) {\n          entries.splice(index2, 1);\n        }\n      };\n      class_1.prototype.has = function(key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      class_1.prototype.clear = function() {\n        this.__entries__.splice(0);\n      };\n      class_1.prototype.forEach = function(callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n      return class_1;\n    }()\n  );\n}();\nvar isBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\" && window.document === document;\nvar global$1 = function() {\n  if (typeof global !== \"undefined\" && global.Math === Math) {\n    return global;\n  }\n  if (typeof self !== \"undefined\" && self.Math === Math) {\n    return self;\n  }\n  if (typeof window !== \"undefined\" && window.Math === Math) {\n    return window;\n  }\n  return Function(\"return this\")();\n}();\nvar requestAnimationFrame$1 = function() {\n  if (typeof requestAnimationFrame === \"function\") {\n    return requestAnimationFrame.bind(global$1);\n  }\n  return function(callback) {\n    return setTimeout(function() {\n      return callback(Date.now());\n    }, 1e3 / 60);\n  };\n}();\nvar trailingTimeout = 2;\nfunction throttle(callback, delay) {\n  var leadingCall = false, trailingCall = false, lastCallTime = 0;\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  function proxy() {\n    var timeStamp = Date.now();\n    if (leadingCall) {\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      }\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n    lastCallTime = timeStamp;\n  }\n  return proxy;\n}\nvar REFRESH_DELAY = 20;\nvar transitionKeys = [\"top\", \"right\", \"bottom\", \"left\", \"width\", \"height\", \"size\", \"weight\"];\nvar mutationObserverSupported = typeof MutationObserver !== \"undefined\";\nvar ResizeObserverController = (\n  /** @class */\n  function() {\n    function ResizeObserverController2() {\n      this.connected_ = false;\n      this.mutationEventsAdded_ = false;\n      this.mutationsObserver_ = null;\n      this.observers_ = [];\n      this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n      this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n    }\n    ResizeObserverController2.prototype.addObserver = function(observer) {\n      if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n      }\n      if (!this.connected_) {\n        this.connect_();\n      }\n    };\n    ResizeObserverController2.prototype.removeObserver = function(observer) {\n      var observers2 = this.observers_;\n      var index2 = observers2.indexOf(observer);\n      if (~index2) {\n        observers2.splice(index2, 1);\n      }\n      if (!observers2.length && this.connected_) {\n        this.disconnect_();\n      }\n    };\n    ResizeObserverController2.prototype.refresh = function() {\n      var changesDetected = this.updateObservers_();\n      if (changesDetected) {\n        this.refresh();\n      }\n    };\n    ResizeObserverController2.prototype.updateObservers_ = function() {\n      var activeObservers = this.observers_.filter(function(observer) {\n        return observer.gatherActive(), observer.hasActive();\n      });\n      activeObservers.forEach(function(observer) {\n        return observer.broadcastActive();\n      });\n      return activeObservers.length > 0;\n    };\n    ResizeObserverController2.prototype.connect_ = function() {\n      if (!isBrowser || this.connected_) {\n        return;\n      }\n      document.addEventListener(\"transitionend\", this.onTransitionEnd_);\n      window.addEventListener(\"resize\", this.refresh);\n      if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n        this.mutationsObserver_.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      } else {\n        document.addEventListener(\"DOMSubtreeModified\", this.refresh);\n        this.mutationEventsAdded_ = true;\n      }\n      this.connected_ = true;\n    };\n    ResizeObserverController2.prototype.disconnect_ = function() {\n      if (!isBrowser || !this.connected_) {\n        return;\n      }\n      document.removeEventListener(\"transitionend\", this.onTransitionEnd_);\n      window.removeEventListener(\"resize\", this.refresh);\n      if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n      }\n      if (this.mutationEventsAdded_) {\n        document.removeEventListener(\"DOMSubtreeModified\", this.refresh);\n      }\n      this.mutationsObserver_ = null;\n      this.mutationEventsAdded_ = false;\n      this.connected_ = false;\n    };\n    ResizeObserverController2.prototype.onTransitionEnd_ = function(_a) {\n      var _b = _a.propertyName, propertyName = _b === void 0 ? \"\" : _b;\n      var isReflowProperty = transitionKeys.some(function(key) {\n        return !!~propertyName.indexOf(key);\n      });\n      if (isReflowProperty) {\n        this.refresh();\n      }\n    };\n    ResizeObserverController2.getInstance = function() {\n      if (!this.instance_) {\n        this.instance_ = new ResizeObserverController2();\n      }\n      return this.instance_;\n    };\n    ResizeObserverController2.instance_ = null;\n    return ResizeObserverController2;\n  }()\n);\nvar defineConfigurable = function(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n  return target;\n};\nvar getWindowOf = function(target) {\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n  return ownerGlobal || global$1;\n};\nvar emptyRect = createRectInit(0, 0, 0, 0);\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\nfunction getBordersSize(styles) {\n  var positions = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n  return positions.reduce(function(size, position) {\n    var value = styles[\"border-\" + position + \"-width\"];\n    return size + toFloat(value);\n  }, 0);\n}\nfunction getPaddings(styles) {\n  var positions = [\"top\", \"right\", \"bottom\", \"left\"];\n  var paddings = {};\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles[\"padding-\" + position];\n    paddings[position] = toFloat(value);\n  }\n  return paddings;\n}\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\nfunction getHTMLElementContentRect(target) {\n  var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom;\n  var width = toFloat(styles.width), height = toFloat(styles.height);\n  if (styles.boxSizing === \"border-box\") {\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, \"left\", \"right\") + horizPad;\n    }\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, \"top\", \"bottom\") + vertPad;\n    }\n  }\n  if (!isDocumentElement(target)) {\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\nvar isSVGGraphicsElement = function() {\n  if (typeof SVGGraphicsElement !== \"undefined\") {\n    return function(target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  }\n  return function(target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === \"function\";\n  };\n}();\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n  return getHTMLElementContentRect(target);\n}\nfunction createReadOnlyRect(_a) {\n  var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n  var Constr = typeof DOMRectReadOnly !== \"undefined\" ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype);\n  defineConfigurable(rect, {\n    x,\n    y,\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\nfunction createRectInit(x, y, width, height) {\n  return { x, y, width, height };\n}\nvar ResizeObservation = (\n  /** @class */\n  function() {\n    function ResizeObservation2(target) {\n      this.broadcastWidth = 0;\n      this.broadcastHeight = 0;\n      this.contentRect_ = createRectInit(0, 0, 0, 0);\n      this.target = target;\n    }\n    ResizeObservation2.prototype.isActive = function() {\n      var rect = getContentRect(this.target);\n      this.contentRect_ = rect;\n      return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n    };\n    ResizeObservation2.prototype.broadcastRect = function() {\n      var rect = this.contentRect_;\n      this.broadcastWidth = rect.width;\n      this.broadcastHeight = rect.height;\n      return rect;\n    };\n    return ResizeObservation2;\n  }()\n);\nvar ResizeObserverEntry = (\n  /** @class */\n  /* @__PURE__ */ function() {\n    function ResizeObserverEntry2(target, rectInit) {\n      var contentRect = createReadOnlyRect(rectInit);\n      defineConfigurable(this, { target, contentRect });\n    }\n    return ResizeObserverEntry2;\n  }()\n);\nvar ResizeObserverSPI = (\n  /** @class */\n  function() {\n    function ResizeObserverSPI2(callback, controller, callbackCtx) {\n      this.activeObservations_ = [];\n      this.observations_ = new MapShim();\n      if (typeof callback !== \"function\") {\n        throw new TypeError(\"The callback provided as parameter 1 is not a function.\");\n      }\n      this.callback_ = callback;\n      this.controller_ = controller;\n      this.callbackCtx_ = callbackCtx;\n    }\n    ResizeObserverSPI2.prototype.observe = function(target) {\n      if (!arguments.length) {\n        throw new TypeError(\"1 argument required, but only 0 present.\");\n      }\n      if (typeof Element === \"undefined\" || !(Element instanceof Object)) {\n        return;\n      }\n      if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n      }\n      var observations = this.observations_;\n      if (observations.has(target)) {\n        return;\n      }\n      observations.set(target, new ResizeObservation(target));\n      this.controller_.addObserver(this);\n      this.controller_.refresh();\n    };\n    ResizeObserverSPI2.prototype.unobserve = function(target) {\n      if (!arguments.length) {\n        throw new TypeError(\"1 argument required, but only 0 present.\");\n      }\n      if (typeof Element === \"undefined\" || !(Element instanceof Object)) {\n        return;\n      }\n      if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n      }\n      var observations = this.observations_;\n      if (!observations.has(target)) {\n        return;\n      }\n      observations.delete(target);\n      if (!observations.size) {\n        this.controller_.removeObserver(this);\n      }\n    };\n    ResizeObserverSPI2.prototype.disconnect = function() {\n      this.clearActive();\n      this.observations_.clear();\n      this.controller_.removeObserver(this);\n    };\n    ResizeObserverSPI2.prototype.gatherActive = function() {\n      var _this = this;\n      this.clearActive();\n      this.observations_.forEach(function(observation) {\n        if (observation.isActive()) {\n          _this.activeObservations_.push(observation);\n        }\n      });\n    };\n    ResizeObserverSPI2.prototype.broadcastActive = function() {\n      if (!this.hasActive()) {\n        return;\n      }\n      var ctx = this.callbackCtx_;\n      var entries = this.activeObservations_.map(function(observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n      });\n      this.callback_.call(ctx, entries, ctx);\n      this.clearActive();\n    };\n    ResizeObserverSPI2.prototype.clearActive = function() {\n      this.activeObservations_.splice(0);\n    };\n    ResizeObserverSPI2.prototype.hasActive = function() {\n      return this.activeObservations_.length > 0;\n    };\n    return ResizeObserverSPI2;\n  }()\n);\nvar observers = typeof WeakMap !== \"undefined\" ? /* @__PURE__ */ new WeakMap() : new MapShim();\nvar ResizeObserver = (\n  /** @class */\n  /* @__PURE__ */ function() {\n    function ResizeObserver2(callback) {\n      if (!(this instanceof ResizeObserver2)) {\n        throw new TypeError(\"Cannot call a class as a function.\");\n      }\n      if (!arguments.length) {\n        throw new TypeError(\"1 argument required, but only 0 present.\");\n      }\n      var controller = ResizeObserverController.getInstance();\n      var observer = new ResizeObserverSPI(callback, controller, this);\n      observers.set(this, observer);\n    }\n    return ResizeObserver2;\n  }()\n);\n[\n  \"observe\",\n  \"unobserve\",\n  \"disconnect\"\n].forEach(function(method) {\n  ResizeObserver.prototype[method] = function() {\n    var _a;\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\nvar index = function() {\n  if (typeof global$1.ResizeObserver !== \"undefined\") {\n    return global$1.ResizeObserver;\n  }\n  return ResizeObserver;\n}();\nvar ResizeObserver_es_default = index;\n\nexport {\n  ResizeObserver_es_default\n};\n//# sourceMappingURL=chunk-LUJC7HAA.js.map\n",
            "start": 1725009516220,
            "end": 1725009516228,
            "sourcemaps": null
        },
        {
            "name": "vite:css",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:esbuild",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:json",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:worker",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:vue",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:define",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:css-post",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:worker-import-meta-url",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:asset-import-meta-url",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:dynamic-import-vars",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:import-glob",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "unplugin-auto-import",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "post"
        },
        {
            "name": "unplugin-vue-components",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "post"
        },
        {
            "name": "vite:client-inject",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:css-analysis",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal"
        },
        {
            "name": "vite:import-analysis",
            "result": "// node_modules/.pnpm/resize-observer-polyfill@1.5.1/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\nvar MapShim = function() {\n  if (typeof Map !== \"undefined\") {\n    return Map;\n  }\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function(entry, index2) {\n      if (entry[0] === key) {\n        result = index2;\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  return (\n    /** @class */\n    function() {\n      function class_1() {\n        this.__entries__ = [];\n      }\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\n         * @returns {boolean}\n         */\n        get: function() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      class_1.prototype.get = function(key) {\n        var index2 = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index2];\n        return entry && entry[1];\n      };\n      class_1.prototype.set = function(key, value) {\n        var index2 = getIndex(this.__entries__, key);\n        if (~index2) {\n          this.__entries__[index2][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      class_1.prototype.delete = function(key) {\n        var entries = this.__entries__;\n        var index2 = getIndex(entries, key);\n        if (~index2) {\n          entries.splice(index2, 1);\n        }\n      };\n      class_1.prototype.has = function(key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      class_1.prototype.clear = function() {\n        this.__entries__.splice(0);\n      };\n      class_1.prototype.forEach = function(callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n      return class_1;\n    }()\n  );\n}();\nvar isBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\" && window.document === document;\nvar global$1 = function() {\n  if (typeof global !== \"undefined\" && global.Math === Math) {\n    return global;\n  }\n  if (typeof self !== \"undefined\" && self.Math === Math) {\n    return self;\n  }\n  if (typeof window !== \"undefined\" && window.Math === Math) {\n    return window;\n  }\n  return Function(\"return this\")();\n}();\nvar requestAnimationFrame$1 = function() {\n  if (typeof requestAnimationFrame === \"function\") {\n    return requestAnimationFrame.bind(global$1);\n  }\n  return function(callback) {\n    return setTimeout(function() {\n      return callback(Date.now());\n    }, 1e3 / 60);\n  };\n}();\nvar trailingTimeout = 2;\nfunction throttle(callback, delay) {\n  var leadingCall = false, trailingCall = false, lastCallTime = 0;\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  function proxy() {\n    var timeStamp = Date.now();\n    if (leadingCall) {\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      }\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n    lastCallTime = timeStamp;\n  }\n  return proxy;\n}\nvar REFRESH_DELAY = 20;\nvar transitionKeys = [\"top\", \"right\", \"bottom\", \"left\", \"width\", \"height\", \"size\", \"weight\"];\nvar mutationObserverSupported = typeof MutationObserver !== \"undefined\";\nvar ResizeObserverController = (\n  /** @class */\n  function() {\n    function ResizeObserverController2() {\n      this.connected_ = false;\n      this.mutationEventsAdded_ = false;\n      this.mutationsObserver_ = null;\n      this.observers_ = [];\n      this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n      this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n    }\n    ResizeObserverController2.prototype.addObserver = function(observer) {\n      if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n      }\n      if (!this.connected_) {\n        this.connect_();\n      }\n    };\n    ResizeObserverController2.prototype.removeObserver = function(observer) {\n      var observers2 = this.observers_;\n      var index2 = observers2.indexOf(observer);\n      if (~index2) {\n        observers2.splice(index2, 1);\n      }\n      if (!observers2.length && this.connected_) {\n        this.disconnect_();\n      }\n    };\n    ResizeObserverController2.prototype.refresh = function() {\n      var changesDetected = this.updateObservers_();\n      if (changesDetected) {\n        this.refresh();\n      }\n    };\n    ResizeObserverController2.prototype.updateObservers_ = function() {\n      var activeObservers = this.observers_.filter(function(observer) {\n        return observer.gatherActive(), observer.hasActive();\n      });\n      activeObservers.forEach(function(observer) {\n        return observer.broadcastActive();\n      });\n      return activeObservers.length > 0;\n    };\n    ResizeObserverController2.prototype.connect_ = function() {\n      if (!isBrowser || this.connected_) {\n        return;\n      }\n      document.addEventListener(\"transitionend\", this.onTransitionEnd_);\n      window.addEventListener(\"resize\", this.refresh);\n      if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n        this.mutationsObserver_.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      } else {\n        document.addEventListener(\"DOMSubtreeModified\", this.refresh);\n        this.mutationEventsAdded_ = true;\n      }\n      this.connected_ = true;\n    };\n    ResizeObserverController2.prototype.disconnect_ = function() {\n      if (!isBrowser || !this.connected_) {\n        return;\n      }\n      document.removeEventListener(\"transitionend\", this.onTransitionEnd_);\n      window.removeEventListener(\"resize\", this.refresh);\n      if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n      }\n      if (this.mutationEventsAdded_) {\n        document.removeEventListener(\"DOMSubtreeModified\", this.refresh);\n      }\n      this.mutationsObserver_ = null;\n      this.mutationEventsAdded_ = false;\n      this.connected_ = false;\n    };\n    ResizeObserverController2.prototype.onTransitionEnd_ = function(_a) {\n      var _b = _a.propertyName, propertyName = _b === void 0 ? \"\" : _b;\n      var isReflowProperty = transitionKeys.some(function(key) {\n        return !!~propertyName.indexOf(key);\n      });\n      if (isReflowProperty) {\n        this.refresh();\n      }\n    };\n    ResizeObserverController2.getInstance = function() {\n      if (!this.instance_) {\n        this.instance_ = new ResizeObserverController2();\n      }\n      return this.instance_;\n    };\n    ResizeObserverController2.instance_ = null;\n    return ResizeObserverController2;\n  }()\n);\nvar defineConfigurable = function(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n  return target;\n};\nvar getWindowOf = function(target) {\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n  return ownerGlobal || global$1;\n};\nvar emptyRect = createRectInit(0, 0, 0, 0);\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\nfunction getBordersSize(styles) {\n  var positions = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n  return positions.reduce(function(size, position) {\n    var value = styles[\"border-\" + position + \"-width\"];\n    return size + toFloat(value);\n  }, 0);\n}\nfunction getPaddings(styles) {\n  var positions = [\"top\", \"right\", \"bottom\", \"left\"];\n  var paddings = {};\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles[\"padding-\" + position];\n    paddings[position] = toFloat(value);\n  }\n  return paddings;\n}\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\nfunction getHTMLElementContentRect(target) {\n  var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom;\n  var width = toFloat(styles.width), height = toFloat(styles.height);\n  if (styles.boxSizing === \"border-box\") {\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, \"left\", \"right\") + horizPad;\n    }\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, \"top\", \"bottom\") + vertPad;\n    }\n  }\n  if (!isDocumentElement(target)) {\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\nvar isSVGGraphicsElement = function() {\n  if (typeof SVGGraphicsElement !== \"undefined\") {\n    return function(target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  }\n  return function(target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === \"function\";\n  };\n}();\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n  return getHTMLElementContentRect(target);\n}\nfunction createReadOnlyRect(_a) {\n  var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n  var Constr = typeof DOMRectReadOnly !== \"undefined\" ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype);\n  defineConfigurable(rect, {\n    x,\n    y,\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\nfunction createRectInit(x, y, width, height) {\n  return { x, y, width, height };\n}\nvar ResizeObservation = (\n  /** @class */\n  function() {\n    function ResizeObservation2(target) {\n      this.broadcastWidth = 0;\n      this.broadcastHeight = 0;\n      this.contentRect_ = createRectInit(0, 0, 0, 0);\n      this.target = target;\n    }\n    ResizeObservation2.prototype.isActive = function() {\n      var rect = getContentRect(this.target);\n      this.contentRect_ = rect;\n      return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n    };\n    ResizeObservation2.prototype.broadcastRect = function() {\n      var rect = this.contentRect_;\n      this.broadcastWidth = rect.width;\n      this.broadcastHeight = rect.height;\n      return rect;\n    };\n    return ResizeObservation2;\n  }()\n);\nvar ResizeObserverEntry = (\n  /** @class */\n  /* @__PURE__ */ function() {\n    function ResizeObserverEntry2(target, rectInit) {\n      var contentRect = createReadOnlyRect(rectInit);\n      defineConfigurable(this, { target, contentRect });\n    }\n    return ResizeObserverEntry2;\n  }()\n);\nvar ResizeObserverSPI = (\n  /** @class */\n  function() {\n    function ResizeObserverSPI2(callback, controller, callbackCtx) {\n      this.activeObservations_ = [];\n      this.observations_ = new MapShim();\n      if (typeof callback !== \"function\") {\n        throw new TypeError(\"The callback provided as parameter 1 is not a function.\");\n      }\n      this.callback_ = callback;\n      this.controller_ = controller;\n      this.callbackCtx_ = callbackCtx;\n    }\n    ResizeObserverSPI2.prototype.observe = function(target) {\n      if (!arguments.length) {\n        throw new TypeError(\"1 argument required, but only 0 present.\");\n      }\n      if (typeof Element === \"undefined\" || !(Element instanceof Object)) {\n        return;\n      }\n      if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n      }\n      var observations = this.observations_;\n      if (observations.has(target)) {\n        return;\n      }\n      observations.set(target, new ResizeObservation(target));\n      this.controller_.addObserver(this);\n      this.controller_.refresh();\n    };\n    ResizeObserverSPI2.prototype.unobserve = function(target) {\n      if (!arguments.length) {\n        throw new TypeError(\"1 argument required, but only 0 present.\");\n      }\n      if (typeof Element === \"undefined\" || !(Element instanceof Object)) {\n        return;\n      }\n      if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n      }\n      var observations = this.observations_;\n      if (!observations.has(target)) {\n        return;\n      }\n      observations.delete(target);\n      if (!observations.size) {\n        this.controller_.removeObserver(this);\n      }\n    };\n    ResizeObserverSPI2.prototype.disconnect = function() {\n      this.clearActive();\n      this.observations_.clear();\n      this.controller_.removeObserver(this);\n    };\n    ResizeObserverSPI2.prototype.gatherActive = function() {\n      var _this = this;\n      this.clearActive();\n      this.observations_.forEach(function(observation) {\n        if (observation.isActive()) {\n          _this.activeObservations_.push(observation);\n        }\n      });\n    };\n    ResizeObserverSPI2.prototype.broadcastActive = function() {\n      if (!this.hasActive()) {\n        return;\n      }\n      var ctx = this.callbackCtx_;\n      var entries = this.activeObservations_.map(function(observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n      });\n      this.callback_.call(ctx, entries, ctx);\n      this.clearActive();\n    };\n    ResizeObserverSPI2.prototype.clearActive = function() {\n      this.activeObservations_.splice(0);\n    };\n    ResizeObserverSPI2.prototype.hasActive = function() {\n      return this.activeObservations_.length > 0;\n    };\n    return ResizeObserverSPI2;\n  }()\n);\nvar observers = typeof WeakMap !== \"undefined\" ? /* @__PURE__ */ new WeakMap() : new MapShim();\nvar ResizeObserver = (\n  /** @class */\n  /* @__PURE__ */ function() {\n    function ResizeObserver2(callback) {\n      if (!(this instanceof ResizeObserver2)) {\n        throw new TypeError(\"Cannot call a class as a function.\");\n      }\n      if (!arguments.length) {\n        throw new TypeError(\"1 argument required, but only 0 present.\");\n      }\n      var controller = ResizeObserverController.getInstance();\n      var observer = new ResizeObserverSPI(callback, controller, this);\n      observers.set(this, observer);\n    }\n    return ResizeObserver2;\n  }()\n);\n[\n  \"observe\",\n  \"unobserve\",\n  \"disconnect\"\n].forEach(function(method) {\n  ResizeObserver.prototype[method] = function() {\n    var _a;\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\nvar index = function() {\n  if (typeof global$1.ResizeObserver !== \"undefined\") {\n    return global$1.ResizeObserver;\n  }\n  return ResizeObserver;\n}();\nvar ResizeObserver_es_default = index;\n\nexport {\n  ResizeObserver_es_default\n};\n//# sourceMappingURL=chunk-LUJC7HAA.js.map\n",
            "start": 1725009516228,
            "end": 1725009516228,
            "order": "normal",
            "sourcemaps": null
        }
    ]
}
